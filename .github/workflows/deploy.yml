# FINAL WORKFLOW: Scrapes data as an artifact, then deploys. No push-back to master.
name: Build and Deploy Site with Talk Map

concurrency:
  group: "pages"
  cancel-in-progress: true

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read # Read permission is enough for checkout
  pages: write
  id-token: write

jobs:
  # Job 1: Scrape talk locations and save data as an artifact
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Run Jupyter Notebook to generate map data
        run: jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb
      
      - name: Create artifact directory
        run: mkdir -p _artifacts/talkmap

      - name: Move generated files to artifact directory
        run: mv talkmap_out.ipynb talkmap/org-locations.js _artifacts/talkmap/

      - name: Upload map data as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: map-data
          path: _artifacts

  # Job 2: Build and deploy the Jekyll site, using the artifact from Job 1
  deploy:
    # This job must wait for the scrape job to complete
    needs: scrape
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download map data artifact
        uses: actions/download-artifact@v4
        with:
          name: map-data

      - name: Restore map data to correct location
        run: mv talkmap/* talkmap/

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4